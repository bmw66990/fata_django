# Generated by Django 3.0.5 on 2020-09-24 07:56

import common.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Consumer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('open_code', models.CharField(default='admin', help_text='如手机号、邮箱等', max_length=128, unique=True, verbose_name='登录账号')),
                ('category', models.CharField(choices=[('mangage', '管理角色'), ('maintain', '运维人员')], default='maintain', max_length=32, verbose_name='账号类别')),
                ('name', models.CharField(max_length=128, verbose_name='用户姓名')),
                ('mobile', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='联系电话')),
                ('sex', models.CharField(choices=[('male', '男'), ('female', '女'), ('other', '未知')], default='other', max_length=32, verbose_name='性别')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, unique=True, verbose_name='邮箱')),
                ('avator', models.CharField(blank=True, max_length=128, null=True, verbose_name='用户头像')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否删除')),
                ('status', models.BooleanField(default=True, verbose_name='是否启用')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('is_staff', models.BooleanField(default=False, verbose_name='工作人权限')),
                ('is_admin', models.BooleanField(default=False, verbose_name='超级用户权限')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建日期')),
                ('read_fault', models.TextField(blank=True, default='[]', null=True, verbose_name='用户阅读故障数量')),
            ],
            options={
                'verbose_name_plural': '用户信息表',
            },
        ),
        migrations.CreateModel(
            name='Deportment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='组织名称')),
                ('organization_type', models.CharField(blank=True, choices=[('admin', '管理'), ('maintain', '运维')], max_length=18, null=True, verbose_name='组织类型')),
                ('belong_dept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dep_department_data', to='accounts.Deportment', verbose_name='数据权限部门')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dep_create_by_msg', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='department_children', to='accounts.Deportment', verbose_name='所属父级组织')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dep_update_by_msg', to=settings.AUTH_USER_MODEL, verbose_name='编辑人')),
            ],
            options={
                'verbose_name': '用户组织表',
                'verbose_name_plural': '用户组织表',
            },
            bases=(models.Model, common.models.DictMixin),
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='角色唯一CODE代码')),
                ('name', models.CharField(max_length=64, verbose_name='角色名称')),
                ('intro', models.CharField(blank=True, max_length=255, null=True, verbose_name='角色介绍')),
                ('datas', models.CharField(choices=[('全部', '全部'), ('同级及以下', '同级及以下'), ('本级及以下', '本级及以下'), ('本级', '本级'), ('仅本人', '仅本人')], default='本级及以下', max_length=50, verbose_name='数据权限')),
                ('role_permission_list', models.CharField(blank=True, max_length=1024, null=True, verbose_name='角色权限信息')),
                ('status', models.BooleanField(default=True, verbose_name='当前状态')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='role_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('depts', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Deportment', verbose_name='所属组织')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='role_modifier', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='accounts.Role', verbose_name='所属父级角色')),
            ],
            options={
                'verbose_name_plural': '角色表 ',
            },
        ),
        migrations.CreateModel(
            name='RoleMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('content', models.TextField(verbose_name='角色菜单内容')),
            ],
            options={
                'verbose_name': '角色菜单表',
                'verbose_name_plural': '角色菜单表',
            },
            bases=(models.Model, common.models.DictMixin),
        ),
        migrations.CreateModel(
            name='WechatUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('nickname', models.CharField(blank=True, max_length=64, null=True, verbose_name='用户名称')),
                ('headimgurl', models.CharField(blank=True, max_length=255, null=True, verbose_name='用户头像')),
                ('openid', models.CharField(blank=True, max_length=255, null=True, verbose_name='用户openid')),
                ('unionid', models.CharField(blank=True, max_length=255, null=True, verbose_name='用户unionid')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='用户所在城市')),
                ('country', models.CharField(blank=True, max_length=255, null=True, verbose_name='用户所在国家')),
                ('province', models.CharField(blank=True, max_length=255, null=True, verbose_name='用户所在省份')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=7, verbose_name='账户余额')),
                ('status', models.BooleanField(default=True, verbose_name='用户当前状态')),
            ],
            options={
                'verbose_name_plural': '微信用户信息表',
            },
            bases=(models.Model, common.models.DictMixin),
        ),
        migrations.CreateModel(
            name='RoleButton',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(blank=True, max_length=32, null=True, verbose_name='权限名称')),
                ('code', models.CharField(blank=True, max_length=32, null=True, verbose_name='code码')),
                ('describe', models.CharField(blank=True, max_length=256, null=True, verbose_name='描述')),
                ('belong_menu', models.CharField(blank=True, max_length=18, null=True, verbose_name='所属菜单')),
                ('status', models.BooleanField(default=False, verbose_name='按钮状态')),
                ('role', models.ManyToManyField(blank=True, related_name='role_button', to='accounts.Role', verbose_name='所属角色')),
            ],
            options={
                'verbose_name': '角色按钮表',
                'verbose_name_plural': '角色按钮表',
            },
            bases=(models.Model, common.models.DictMixin),
        ),
        migrations.CreateModel(
            name='Operational',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('order', models.CharField(blank=True, max_length=32, null=True, verbose_name='工单编号')),
                ('operational_type', models.CharField(choices=[('weixiugongdan', '维修工单'), ('chakangongdan', '巡检工单')], max_length=32, verbose_name='工单类型')),
                ('operational_state', models.CharField(choices=[('urgency', '紧急'), ('common', '一般')], max_length=32, verbose_name='状态属性')),
                ('dispose_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='处理时间')),
                ('status', models.CharField(blank=True, choices=[('not_send_order', '尚未派单'), ('send_order', '派单完成'), ('not_dispose', '未处理'), ('dispose', '处理')], default='not_send_order', max_length=16, null=True, verbose_name='处理状态')),
                ('cause', models.TextField(blank=True, null=True, verbose_name='故障原因')),
                ('process', models.CharField(blank=True, max_length=128, null=True, verbose_name='处理过程')),
                ('resault', models.CharField(blank=True, max_length=128, null=True, verbose_name='处理结果')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fault_submit_creator', to=settings.AUTH_USER_MODEL, verbose_name='维修人员')),
                ('send_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='send_user_fault', to=settings.AUTH_USER_MODEL, verbose_name='派单人员')),
            ],
            options={
                'verbose_name': '工单管理',
                'verbose_name_plural': '工单管理',
            },
            bases=(models.Model, common.models.DictMixin),
        ),
        migrations.AddField(
            model_name='consumer',
            name='dept',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_deps', to='accounts.Deportment', verbose_name='组织'),
        ),
        migrations.AddField(
            model_name='consumer',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='consumer',
            name='role',
            field=models.ManyToManyField(blank=True, related_name='role_consumer', to='accounts.Role', verbose_name='用户角色'),
        ),
        migrations.AddField(
            model_name='consumer',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='consumer',
            name='wechat_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wechat_consumer', to='accounts.WechatUser', verbose_name='微信用户信息'),
        ),
    ]
